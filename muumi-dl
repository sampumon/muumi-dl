#!/bin/bash
#
# VIIMEISIMMÄN MUUMIJAKSON LATAAJA !
# DOWNLOAD LATEST MUUMI EPISODE !
#
# usage: muumi-dl [muumi-dl.list]
#
# put downloadable yle areena searches into muumi-dl.list as:
# areena-search-url	[target_dir=~/Desktop]


#################### HERE ARE OUR FUNCTIONS ####################

# exit with error message (just print it to stdout)
quit() {
	echo "$@"
	exit 1
}

# (deprecated) get the canonical directory where muumi-dl is, resolving symlinks
muumidir-symlink() {
	readlink $0 > /dev/null \
		&& muumidir=$(dirname $0)/$(dirname $(readlink $0)) \
		|| muumidir=$(dirname $0)
}

# check if areena is available by downloading robots.txt
# returns 0 for SUCCESS
check-for-areena() {
	curl -fs "areena.yle.fi/robots.txt" > /dev/null
}

# check if yle-dl actually downloaded or if the file was downloaded before
# if new stuff is available, save it's path to $flv
# usage: check-if-new muumi-dl.log
check-if-new() {
	tail $1 | grep -q "Not overwriting" && return 1
	flv=$(tail $muumilog | grep "Stream saved to " | sed 's/Stream saved to //')
}

# notify a message with title (which is also echoed)
# uses growlnotify on OS X and TODO on linux
# usage: echo "message" | notify [-d areena-url] "title"
notify() {
	[ "$1" == "-d" ] && {
		id=$2
		shift 2
	} || id=muumi-dl

	echo "$@"

	[ -x $growlnotify ] && $growlnotify -n muumi-dl -d $id "$@"
}

# DO THE YLE DL!
# downloads the latest episode from given areena page
# usage: do-yle-dl areena-url destination-dir
do-yle-dl() {
	# temp log file for this run
	muumitemp=$(mktemp -t muumi-dl)

	# default destination to desktop
	destdir=${2:-~/Desktop}

	# create destination directory
	# NOTE: eval expands possible ~ in $destdir, which strangely is'n expanded here otherwise?
	eval mkdir -p $destdir

	echo $1 | notify -d $1 "muumi-dl getting stuff…"

	# TODO: --resume doesn't work, a bug in yle-dl?
	# tee inside process substitution so we can use yle-dl exit code
	$yledl --resume --latestepisode --destdir $destdir $1 2> >(tee $muumitemp >> $muumilog) && {
		check-if-new $muumitemp && {
			tail -2 $muumitemp | sed G | notify -d $1 "muumi-dl ok & HAVE NEW STUFF!"
		} || {
			tail -3 $muumitemp | sed G | notify -d $1 "muumi-dl ok (no new stuff)"
		}
	} || tail -4 $muumitemp | sed G | notify -d $1 "muumi-dl FAIL :/"
}

#################### THIS IS OUR CONFIGURATION ####################

# get the canonical directory where muumi-dl is, NOT resolving symlinks
muumidir=$(dirname $0)

# by default, muumi-dl.list is in the same directory as script
[ "$1" ] && muumilist=$1 || muumilist=$muumidir/muumi-dl.list
[ -f "$muumilist" ] || quit "muumi-dl ERROR: $muumilist not found"

# NOTE: /var/log is not writeable, so if log file is not already presesent just put it to script dir
muumilog=/var/log/muumi-dl.log
[ -w $muumilog ] || muumilog=$muumidir/muumi-dl.log

# /usr/local/bin not in launchd environment's path
yledl=/usr/local/bin/yle-dl
growlnotify=/usr/local/bin/growlnotify

#################### BEGIN MAIN STUFF ####################

date >> $muumilog

echo "checking for areena.yle.fi" | notify "muumi-dl igniting…"

# strip empty lines and #comments (note verbatim tab in sed expression)
sed 's/#.*//; /^[ 	]*$/d;' $muumilist | while read muumihaku hakemisto; do

	# check for internet twice, then give up
	check-for-areena || {
		notify "muumi-dl still igniting…" <<-TAC
			Can't connect to areena.yle.fi, maybe you have no internet?

			Trying again in a minute.
		TAC

		sleep 60

		check-for-areena || {
			echo "Still can't connect to areena.yle.fi, quitting for the day." \
				| notify "muumi-dl error :/"
			exit 2
		}
	}

	do-yle-dl "$muumihaku" "$hakemisto"

done
