#!/bin/bash
#
# VIIMEISIMMÄN MUUMIJAKSON LATAAJA !
# DOWNLOAD LATEST MUUMI EPISODE !
#
# usage: muumi-dl [muumi-dl.list]
#
# put downloadable yle areena searches into muumi-dl.list as:
# areena-search-page	[target_dir = ~/Desktop]

# get the canonical directory where muumi-dl is
readlink $0 > /dev/null \
	&& muumidir=$(dirname $0)/$(dirname $(readlink $0)) \
	|| muumidir=$(dirname $0)

# by default, muumi-dl.list is in the same directory as script
[ "$1" ] && muumilist=$1 || muumilist=$muumidir/muumi-dl.list

# NOTE: /var/log is not writeable, if log file is not already presesent just put it to script dir
muumilog=/var/log/muumi-dl.log
[ -w $muumilog ] || muumilog=$muumidir/muumi-dl.log

# /usr/local/bin not in path
yledl=/usr/local/bin/yle-dl
growlnotify=/usr/local/bin/growlnotify

# check if yle-dl actually downloaded or if the file was downloaded before
# if new stuff is available, save it's path to $flv
# reads yle-dl history from $muumilog
check-yle-dl() {
	tail $muumilog | grep -q "Not overwriting" && return 1
	flv=$(tail $muumilog | grep "Stream saved to " | sed 's/Stream saved to //')
}

# notify a message with title
# uses growlnotify on OS X and TODO on linux
# usage: notify "title" "message"
notify() {
	title=$1
	shift
	echo $title
	[ -x $growlnotify ] && $growlnotify -n "$0" -m "$@" $title
}

# DO THE YLE-DL

# strip empty lines and #comments (note verbatim tab in sed expression)
sed 's/#.*//; /^[ 	]*$/d;' $muumilist | while read muumihaku hakemisto; do

	# echo info AND set hakemisto to default if not specified
	echo muumi-dl $muumihaku → ${hakemisto:=~/Desktop}
	date >> $muumilog
	
	# TODO: --resume doesn't work, a bug in yle-dl?
	$yledl --resume --latestepisode --destdir $hakemisto $muumihaku 2>> $muumilog \
	&& {
		check-yle-dl \
			&& notify "muumi-dl ok & HAVE NEW STUFF ^_^" $flv \
			|| notify "muumi-dl ok (no new stuff)" $muumihaku
	} || notify "muumi-dl FAIL :/" $muumihaku

done
