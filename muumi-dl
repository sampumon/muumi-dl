#!/bin/bash
#
# VIIMEISIMMÄN MUUMIJAKSON LATAAJA !
# DOWNLOAD LATEST MUUMI EPISODE !
#
# usage: muumi-dl [muumi-dl.list]
#
# put downloadable yle areena searches into muumi-dl.list as:
# areena-search-url	[target_dir=~/Desktop]


#################### HERE ARE OUR FUNCTIONS ####################

# exit with error message (just print it to stdout)
quit() {
	echo "$@"
	exit 1
}

# (deprecated) get the canonical directory where muumi-dl is, resolving symlinks
muumidir-symlink() {
	readlink $0 > /dev/null \
		&& muumidir=$(dirname $0)/$(dirname $(readlink $0)) \
		|| muumidir=$(dirname $0)
}

# check if areena is available by downloading robots.txt
# TODO: requires curl, maybe switch to wget eller hur
# returns 0 for SUCCESS
check-for-areena() {
	curl -fs "areena.yle.fi/robots.txt" > /dev/null
}

# check if yle-dl actually downloaded or if the file was downloaded before
# also if new stuff is available, save it's path to $flv
# usage: check-if-new muumi-dl.log
# returns:
#	0 if have new stuff
#	1 if already downloaded
#	2 if yle-dl error
check-if-new() {
	grep -q "Stream saved to" $muumitemp && {
		# yle-dl succesful run...
		egrep -q "Not overwriting|Already Completed" $muumitemp && {
			# ...but no new stuff
			return 1
		}

		# save flv path for later use
		flv=$(grep "Stream saved to " $muumitemp | sed 's/Stream saved to //')
		return 0
	}

	return 2
}

# waits for magic keyword to appear from stdin; send notify if that happens
# usage: wait-for-incoming areena-url muumi-dl.log &
# returns if magic happens :->
wait-for-incoming() {
	# TODO: also notify on download resume
	# "Resuming download at: 31628.148 kB / 368.240 sec (26.3%)"
	tail -fn0 $2 | grep --line-buffered -q "Starting download at:" \
		&& echo $1 | notify -d $1 "muumi-dl downloading new stuff!" \
		|| echo "DEBUG: did not receive new stuff?"
}

# notify a message (from stdin) & title
# uses growlnotify on OS X and notify-send on Ubuntu
# usage: echo "message" | notify [-d areena-url] "title"
notify() {
	[ "$1" == "-d" ] && {
		id=$2
		shift 2
	} || id=muumi-dl

	# TODO: maybe check once and use variable later
	if which growlnotify > /dev/null; then
		growlnotify -n muumi-dl -d $id "$@"
	elif which notify-send > /dev/null; then
		# TODO: can we group notifies by id?
		notify-send "$@" "$(</dev/stdin)"
	else # flush stdin
		cat > /dev/null
	fi
}

# DO THE YLE DL!
# downloads the latest episode from given areena page
# usage: do-yle-dl areena-url destination-dir
do-yle-dl() {
	# temp log file for this run
	muumitemp=$(mktemp -t muumi-dl-XXX)

	# default destination to desktop
	destdir=${2:-~/Desktop}

	# create destination directory
	mkdir -p $destdir

	# log & notify
	echo $(date) \| $1 | tee -a $muumilog
	echo $1 | notify -d $1 "muumi-dl checking for stuff…"

	# do crazy magic stuff on background
	wait-for-incoming $1 $muumitemp &

	# note: tee is inside process substitution so we can use yle-dl's exit code
	yle-dl --resume --latestepisode --destdir $destdir $1 2> >(tee $muumitemp >> $muumilog) && {
		check-if-new $muumitemp && {
			tail -2 $muumitemp | sed G | notify -d $1 "muumi-dl HAVE NEW STUFF!"
		} || {
			tail -3 $muumitemp | sed G | notify -d $1 "muumi-dl no new stuff"
		}
	} || tail -4 $muumitemp | sed G | notify -d $1 "muumi-dl FAIL :/"

	# TODO: maybe send graceful exit payload for wait-for-incoming?
}


#################### THIS IS OUR CONFIGURATION ####################

# get the canonical directory where muumi-dl is, NOT resolving symlinks
muumidir=$(dirname $0)

# by default, muumi-dl.list is in the same directory as script
[ "$1" ] && muumilist=$1 || muumilist=$muumidir/muumi-dl.list
[ -f "$muumilist" ] || quit "muumi-dl ERROR: $muumilist not found"

# NOTE: /var/log is not writeable, so if log file is not already presesent just put it to script dir
muumilog=/var/log/muumi-dl.log
[ -w $muumilog ] || muumilog=$muumidir/muumi-dl.log

# /usr/local/bin is not in launchd environment's path
export PATH+=:/usr/local/bin


#################### BEGIN MAIN STUFF ####################

echo "checking for areena.yle.fi" | notify "muumi-dl igniting…"

# strip empty lines and #comments (note verbatim tab in sed expression)
sed 's/#.*//; /^[ 	]*$/d;' $muumilist | while read muumiurl destdir; do

	# bash-expand possible ~ in $destdir, which otherwise isn't expanded
	# NOTE: using eval presents a tiny risk of self-inflicted hazardous stuff
	destdir=$(eval echo $destdir)

	# check for internet twice, then give up
	check-for-areena || {
		notify "muumi-dl still igniting…" <<-TAC
			Can't connect to areena.yle.fi, maybe you have no internet?

			Trying again in a minute.
		TAC

		sleep 60

		check-for-areena || {
			echo "Still can't connect to areena.yle.fi, quitting for the day." \
				| notify "muumi-dl error :/"
			exit 2
		}
	}

	do-yle-dl "$muumiurl" "$destdir"

done
